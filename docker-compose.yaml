services:
  # Layanan untuk aplikasi NestJS Anda
  app1:
    build: .
    container_name: nestjs_app1
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '1001:1001'
    depends_on:
      - mysql
      - redis # Tambahkan kembali dependensi ke redis
    networks:
      - app-network

  app2:
    build: .
    container_name: nestjs_app2
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '1002:1001'
    depends_on:
      - mysql
      - redis # Tambahkan kembali dependensi ke redis
    networks:
      - app-network

  # Layanan untuk Redis lokal
  redis:
    image: 'redis:alpine'
    container_name: redis_cache
    restart: unless-stopped
    ports:
      - '6379:6379'
    networks:
      - app-network

  redis-insight:
    image: redis/redisinsight:latest
    container_name: redis-insight
    restart: unless-stopped
    environment:
      - REDIS_URI=redis://redis:6379
    ports:
      - '5540:5540'
    depends_on:
      - redis
    networks:
      - app-network

  # Layanan untuk MySQL Database
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      # Sesuaikan dengan nama database dari DATABASE_URL Anda
      MYSQL_DATABASE: test-nestjs
      # Password untuk user 'root'
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      # Mapping port 3306 jika Anda perlu mengakses dari luar docker
      - '3306:3306'
    volumes:
      # Di sinilah data MySQL akan disimpan secara permanen
      - db-data:/var/lib/mysql
    networks:
      - app-network

  # Layanan untuk phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    restart: unless-stopped
    ports:
      - '8080:80'
    environment:
      PMA_HOST: mysql # Menunjuk ke service mysql
      PMA_PORT: 3306
      UPLOAD_LIMIT: 64M
    depends_on:
      - mysql # Harus jalan setelah mysql siap
    networks:
      - app-network

# Definisikan jaringan yang akan digunakan oleh layanan
networks:
  app-network:
    driver: bridge

# Definisikan volume untuk persistensi data
volumes:
  db-data:
    driver: local
